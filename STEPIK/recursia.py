# Пример:
# Пусть n = 3, т. е. есть три элемента (1, 2, 3). Пусть k = 2.
# Все различные сочетания из 3 элементов по 2: (1, 2), (1, 3), (2, 3).
# Различных сочетаний три, поэтому C(3, 2) = 3.

# Несложно понять, что C(n, 0) = 1, так как из n элементов выбрать 0 можно единственным образом,
#  а именно, ничего не выбрать.
# Также несложно понять, что если k > n, то C(n, k) = 0, так как невозможно, например,
#  из трех элементов выбрать пять.

# Для вычисления C(n, k) в других случаях используется следующая рекуррентная формула:
# C(n, k) = C(n - 1, k) + C(n - 1, k - 1).

# Реализуйте программу, которая для заданных n и k вычисляет C(n, k).

# Вашей программе на вход подается строка, содержащая два целых числа n и k (1 ≤ n ≤ 10, 0 ≤ k ≤ 10).
# Ваша программа должна вывести единственное число: C(n, k).






def f(n, k):
    if n == k or k == 0:
        return 1
    else:
        return f(n - 1, k) + f(n - 1, k - 1)

n, k = map(int, input().split())
print(f(n, k))


# def c(n, k):
#     if k > n:
#         return 0
#     if k == 0:
#         return 1
#     return c(n - 1, k) + c(n - 1, k - 1)

# n, k = map(int, input().split())
# print(c(n, k))


# n, k = map(int, input().split())

# sz = max(n, k) + 1
# c = [[0] * sz for _ in range(sz)]

# c[0][0] = 1
# for i in range(1, sz):
#     for j in range(i + 1):
#         c[i][j] = c[i - 1][j] + c[i - 1][j - 1]

# print(c[n][k])






        

